// game/modes/hydration.js
// ‡πÇ‡∏´‡∏°‡∏î: ‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ô‡πâ‡∏≥ üíß ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° 45‚Äì65%

// ‡πÉ‡∏ä‡πâ HUD ‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å index.html: #hydroWrap, #hydroBar, #hydroLabel
// ‡πÑ‡∏°‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á DOM ‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö hud.show/hide

export function init(state, hud, diff){
  state.ctx = state.ctx || {};
  // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô ctx ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î‡∏≠‡∏∑‡πà‡∏ô
  state.ctx.hyd = 55;              // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 55%
  state.ctx.hydMin = 45;           // ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
  state.ctx.hydMax = 65;

  // ‡πÅ‡∏™‡∏î‡∏á HUD ‡∏ô‡πâ‡∏≥
  try{ hud?.showHydration?.(); }catch{}
  updateBar(state.ctx.hyd);
  setHydroLabel(state.lang, state.ctx.hyd);
}

export function pickMeta(diff, state){
  // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏° (‡∏ô‡πâ‡∏≥/‡∏ô‡∏° = ‡∏ö‡∏ß‡∏Å, ‡∏ô‡πâ‡∏≥‡∏´‡∏ß‡∏≤‡∏ô/‡∏Å‡∏≤‡πÅ‡∏ü = ‡∏•‡∏ö)
  const drinks = [
    { char:'üíß', effect:+10 }, // ‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤
    { char:'ü•õ', effect:+8  }, // ‡∏ô‡∏°
    { char:'ü•§', effect:-15 }, // ‡∏ô‡πâ‡∏≥‡∏´‡∏ß‡∏≤‡∏ô/‡πÇ‡∏ã‡∏î‡∏≤
    { char:'‚òï', effect:-10 }  // ‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏Ç‡πâ‡∏°/‡∏´‡∏ß‡∏≤‡∏ô
  ];
  const meta = drinks[(Math.random()*drinks.length)|0];
  meta.life = diff?.life ?? 3000; // ‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û TTL ‡∏à‡∏≤‡∏Å diff
  return meta;
}

export function onHit(meta, sys, state, hud){
  const { score, sfx, fx } = sys || {};
  const ctx = state.ctx || {};
  const before = ctx.hyd ?? 55;

  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ hydration ‡πÅ‡∏•‡∏∞ clamp 0‚Äì100
  ctx.hyd = Math.max(0, Math.min(100, before + (meta.effect||0)));
  updateBar(ctx.hyd);
  setHydroLabel(state.lang, ctx.hyd);

  // ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:
  // - ‡∏î‡∏∑‡πà‡∏°‡∏î‡∏µ (‡∏ö‡∏ß‡∏Å) ‡πÑ‡∏î‡πâ +5 (+7 ‡∏ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏î‡∏∑‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏ã‡∏ô 45‚Äì65)
  // - ‡∏î‡∏∑‡πà‡∏°‡πÑ‡∏°‡πà‡∏î‡∏µ (‡∏•‡∏ö) ‡πÑ‡∏î‡πâ -3 (-5 ‡∏ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏î‡∏∑‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏ô‡∏≠‡∏Å‡πÇ‡∏ã‡∏ô)
  const inZoneAfter = (ctx.hyd >= ctx.hydMin && ctx.hyd <= ctx.hydMax);
  if ((meta.effect||0) > 0){
    const add = inZoneAfter ? 7 : 5;
    score?.add?.(add);
    fx?.popText?.(`+${add}`, { color: inZoneAfter ? '#7fffd4' : '#bde0ff' });
    sfx?.good?.();
  }else{
    const add = inZoneAfter ? -3 : -5;
    score?.add?.(add);
    fx?.popText?.(`${add}`, { color:'#ff9b9b' });
    sfx?.bad?.();
  }
}

export function tick(state, sys, hud){
  // ‡∏•‡∏î‡∏ä‡πâ‡∏≤ ‡πÜ ‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
  const ctx = state.ctx || {};
  ctx.hyd = Math.max(0, (ctx.hyd ?? 55) - 0.4);
  updateBar(ctx.hyd);
  setHydroLabel(state.lang, ctx.hyd);
}

// ---------- Helpers ----------
function updateBar(val){
  const bar = document.getElementById('hydroBar');
  if (!bar) return;
  const p = Math.round(val);
  bar.style.width = p + '%';
  // ‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö
  let color = '#4FC3F7';     // ‡∏õ‡∏Å‡∏ï‡∏¥
  if (p < 45) color = '#E53935';     // ‡∏ï‡πà‡∏≥‡πÑ‡∏õ = ‡πÅ‡∏î‡∏á
  else if (p > 65) color = '#FFB300';// ‡∏™‡∏π‡∏á‡πÑ‡∏õ = ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
  bar.style.background = color;
}

function setHydroLabel(lang='TH', val){
  const el = document.getElementById('hydroLabel');
  if (!el) return;
  const p = Math.round(val);
  const text = lang==='EN' ? `Hydration ${p}%` : `‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ô‡πâ‡∏≥ ${p}%`;
  el.textContent = text;
  const wrap = document.getElementById('hydroWrap');
  if (wrap) wrap.style.display = 'block';
}

// ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏°‡∏î
export function cleanup(state, hud){
  try{ hud?.hideHydration?.(); }catch{}
  const bar = document.getElementById('hydroBar');
  const lb  = document.getElementById('hydroLabel');
  if (bar) bar.style.width = '0%';
  if (lb)  lb.textContent  = '‚Äî';
  if (state?.ctx){
    state.ctx.hyd = undefined;
    state.ctx.hydMin = undefined;
    state.ctx.hydMax = undefined;
  }
}
