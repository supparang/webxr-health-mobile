// === Hero Health Academy ‚Äî modes/goodjunk.js (aligned with A‚ÄìD, missions-safe) ===
export const name = 'goodjunk';

// ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡∏µ/‡∏Ç‡∏¢‡∏∞) ‚Äî ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
const GOOD = [
  { id:'apple',   labelEN:'Apple',    labelTH:'‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡∏•',  icon:'üçé' },
  { id:'carrot',  labelEN:'Carrot',   labelTH:'‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó',    icon:'ü•ï' },
  { id:'broccoli',labelEN:'Broccoli', labelTH:'‡∏ö‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏•‡∏µ', icon:'ü•¶' },
  { id:'rice',    labelEN:'Rice',     labelTH:'‡∏Ç‡πâ‡∏≤‡∏ß',     icon:'üçö' },
  { id:'fish',    labelEN:'Fish',     labelTH:'‡∏õ‡∏•‡∏≤',      icon:'üêü' },
  { id:'egg',     labelEN:'Egg',      labelTH:'‡πÑ‡∏Ç‡πà',      icon:'ü•ö' },
  { id:'milk',    labelEN:'Milk',     labelTH:'‡∏ô‡∏°',       icon:'ü•õ' },
];
const JUNK = [
  { id:'donut',   labelEN:'Donut',    labelTH:'‡πÇ‡∏î‡∏ô‡∏±‡∏ó',    icon:'üç©' },
  { id:'burger',  labelEN:'Burger',   labelTH:'‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå',icon:'üçî' },
  { id:'fries',   labelEN:'Fries',    labelTH:'‡πÄ‡∏ü‡∏£‡∏ô‡∏ä‡πå‡∏ü‡∏£‡∏≤‡∏¢‡∏™‡πå', icon:'üçü' },
  { id:'soda',    labelEN:'Soda',     labelTH:'‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏î‡∏•‡∏°', icon:'ü•§' },
  { id:'candy',   labelEN:'Candy',    labelTH:'‡∏•‡∏π‡∏Å‡∏≠‡∏°',    icon:'üç¨' },
  { id:'cookie',  labelEN:'Cookie',   labelTH:'‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ',   icon:'üç™' },
  { id:'pizza',   labelEN:'Pizza',    labelTH:'‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤',   icon:'üçï' },
];

const ST = {
  lang:'TH',
  needGood: 0, gotGood: 0,
  x2Until: 0,           // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏π‡∏ì 2 ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß (‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö main.js)
};

export function init(gameState, hud, diff){
  ST.lang = localStorage.getItem('hha_lang') || 'TH';
  // ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ ‚Äú‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏î‡∏µ ‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞‚Äù
  // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á HUD ‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö/‡∏™‡∏Å‡∏≠‡∏£‡πå
  ST.gotGood = 0;
  ST.needGood = (gameState?.difficulty==='Hard')? 20 : (gameState?.difficulty==='Easy'? 10 : 15);
}

export function cleanup(){}

export function tick(){ /* no-op */ }

export function pickMeta(diff){
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏î‡∏µ:‡∏Ç‡∏¢‡∏∞ ~ 60:40 ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏°‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏ß‡∏™‡πÑ‡∏î‡πâ
  const isGood = Math.random() < 0.6;
  const pool = isGood ? GOOD : JUNK;
  const it = pool[(Math.random()*pool.length)|0];

  const golden = performance.now() < ST.x2Until;
  const mult = golden ? 2 : 1;

  const lifeBase = diff?.life || 3000;
  const life = Math.min(4500, Math.max(700, lifeBase)); // cap TTL ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏ß‡∏°

  return {
    id: it.id,
    char: it.icon,
    good: isGood,
    mult,
    life,
    golden
  };
}

export function onHit(meta, systems){
  if (meta.good){
    ST.gotGood++;
    systems.coach?.say?.(t('‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡∏µ', 'Great! Healthy pick', ST.lang));
    return 'good'; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏π‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà main.js ‡∏ú‡πà‡∏≤‡∏ô meta.mult
  }else{
    systems.coach?.say?.(t('‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞!', 'Careful, junk!', ST.lang));
    return 'bad';
  }
}

// Power durations ‡πÉ‡∏´‡πâ main.js ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö UI ‡∏ö‡∏≤‡∏£‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô (‡πÅ‡∏°‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏°‡πà‡πÄ‡∏´‡∏•‡πá‡∏Å)
export function getPowerDurations(){ return { x2:8, freeze:3, magnet:0 }; }
export const powers = {
  x2Target(){ ST.x2Until = performance.now() + 8000; },
  freezeTarget(){ /* main.js ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ freeze spawn ‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏° */ },
  magnetNext(){ /* ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô goodjunk */ }
};

// utils
function t(th,en,lang){ return lang==='EN'?en:th; }
import { add3DTilt, shatter3D } from '/webxr-health-mobile/HeroHealth/game/core/fx.js';

export const fx = {
  onSpawn(el/*, state*/){
    add3DTilt(el);
  },
  onHit(x, y/*, meta, state*/){
    shatter3D(x, y);
  }
};
