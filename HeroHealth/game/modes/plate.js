
export const name='จัดจานสุขภาพ';
const QUOTA = { grain:2, veg:2, protein:1, fruit:1, dairy:1 };
const GROUPS = { grain:['🍞','🍚','🥖','🥨'], veg:['🥦','🥕','🥒','🥬'], protein:['🥩','🍗','🥚','🐟'], fruit:['🍎','🍌','🍇','🍊'], dairy:['🥛','🧀'] };
const LABELS = { grain:'ธัญพืช', veg:'ผัก', protein:'โปรตีน', fruit:'ผลไม้', dairy:'นม' };
export function init(state,hud){ state.plate=state.plate||{grain:0,veg:0,protein:0,fruit:0,dairy:0}; const wrap=document.getElementById('plateTracker'); if(wrap) wrap.style.display='block'; renderPills(state); updatePlateHUD(state); }
function remainingCounts(state){ const plate=state.plate||{}; const rem={}; for(const k of Object.keys(QUOTA)){ rem[k]=Math.max(0,(QUOTA[k]||0)-(plate[k]||0)); } return rem; }
function nextRecommended(state){ const rem=remainingCounts(state); const keys=Object.keys(QUOTA); const max=Math.max(...keys.map(k=>rem[k])); const cands=keys.filter(k=>rem[k]===max && max>0); return cands.length?cands[Math.floor(Math.random()*cands.length)]:null; }
function updatePlateHUD(state){ const wrap=document.getElementById('targetWrap'); if(wrap) wrap.style.display='block'; const badge=document.getElementById('targetBadge'); if(!badge) return; const next=nextRecommended(state); if(next){ const cur=(state.plate?.[next]||0), need=(QUOTA[next]||0); badge.textContent=`${LABELS[next]} (${cur}/${need})`; } else { badge.textContent='ครบโควตาแล้ว!'; } }
function renderPills(state){ const pills=document.getElementById('platePills'); if(!pills) return; pills.textContent=''; const arr=[]; Object.keys(QUOTA).forEach(k=>{ const cur=state.plate[k]||0, need=QUOTA[k]; arr.push(`${LABELS[k]} ${cur}/${need}`); }); pills.textContent = arr.join(' | '); }
export function pickMeta(diff,state){ const keys=Object.keys(GROUPS); const k=keys[Math.floor(Math.random()*keys.length)] || 'fruit'; const arr=GROUPS[k]||GROUPS.fruit; const char=arr[Math.floor(Math.random()*arr.length)]; return {type:'plate',group:k,char}; }
export function onHit(meta,systems,state){ state.plate=state.plate||{grain:0,veg:0,protein:0,fruit:0,dairy:0}; const k=meta.group, need=QUOTA[k]??0, cur=state.plate[k]||0; if(cur<need){ state.plate[k]=cur+1; systems.score.add(6); systems.sfx.play('sfx-good'); systems.fx.spawn3D(null,'+6','good'); state.ctx.plateFills=(state.ctx.plateFills||0)+1; const done=Object.keys(QUOTA).every(g=>(state.plate[g]||0)>=QUOTA[g]); if(done){ systems.score.add(14); systems.sfx.play('sfx-perfect'); systems.fx.spawn3D(null,'+14 🎉','good'); state.ctx.perfectPlates=(state.ctx.perfectPlates||0)+1; state.plate={grain:0,veg:0,protein:0,fruit:0,dairy:0}; } } else { systems.score.add(-2); systems.sfx.play('sfx-bad'); systems.fx.spawn3D(null,'-2','bad'); state.timeLeft=Math.max(0,(state.timeLeft||0)-1); state.ctx.overfillCount=(state.ctx.overfillCount||0)+1; if(systems.score.combo>0) systems.score.bad(); } renderPills(state); updatePlateHUD(state); }
