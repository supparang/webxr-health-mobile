// === Hero Health Academy ‚Äî game/core/coach.js (hardened + queue + auto HUD) ===
// ‡πÇ‡∏Ñ‡πâ‡∏ä: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå‡∏™‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏•‡πà‡∏ô + ‡∏õ‡∏•‡∏∏‡∏Å‡πÉ‡∏à + ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå/FEVER/‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î
// ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö index ‡∏ó‡∏µ‡πà‡∏°‡∏µ #coachHUD + #coachText (‡πÑ‡∏°‡πà‡∏°‡∏µ = ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)

export class Coach {
  constructor(opts = {}) {
    this.lang = (opts.lang || 'TH').toUpperCase();
    this.minGap = Number.isFinite(opts.minGap) ? opts.minGap : 700;        // ‡∏Å‡∏±‡∏ô‡∏¢‡∏¥‡∏á‡∏£‡∏±‡∏ß
    this.visibleMs = Number.isFinite(opts.visibleMs) ? opts.visibleMs : 1600;
    this.priorityEnabled = opts.priorityEnabled ?? true;                   // ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö priority
    this.cooldownScaleOnBlur = opts.cooldownScaleOnBlur ?? 1.6;            // ‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÇ‡∏ü‡∏Å‡∏±‡∏™ ‚Üí ‡∏•‡∏î‡∏™‡πÅ‡∏õ‡∏°
    this.mergeDuplicatesMs = opts.mergeDuplicatesMs ?? 600;                // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏ã‡πâ‡∏≥‡∏ï‡∏¥‡∏î ‡πÜ ‡∏Å‡∏±‡∏ô

    // DOM
    this.elHUD = document.getElementById('coachHUD') || this._ensureHUD();
    this.elText = document.getElementById('coachText') || this._ensureHUD(true);

    // State
    this._lastShownAt = 0;
    this._timerHide = 0;
    this._queue = []; // {text, at, prio}
    this._lastText = '';
    this._lastEnqAt = 0;
    this._loop = null;

    // Pause/Blur awareness (‡∏•‡∏î‡∏™‡πÅ‡∏õ‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö)
    this._blurred = false;
    try {
      window.addEventListener('blur',  () => { this._blurred = true;  }, { passive:true });
      window.addEventListener('focus', () => { this._blurred = false; }, { passive:true });
    } catch {}

    this._startLoop();
  }

  /* ============================= Public ============================= */
  setLang(l){ this.lang = (l||'TH').toUpperCase(); }
  setHUD(elHUD, elText){
    if (elHUD) this.elHUD = elHUD;
    if (elText) this.elText = elText;
  }

  // ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ä‡πà‡∏ß‡∏¢: ‡∏û‡∏π‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏¥‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡πâ‡∏ß‡∏¢ key
  say(text, prio = 1){ this._enqueue(text, prio); }
  sayKey(key, vars = [], prio = 1){ this._enqueue(this._t(key, vars), prio); }

  // ===== Hooks ‡∏ó‡∏µ‡πà main/modes ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å (API ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°) =====
  onStart(){ this._enqueue(this._t('start'), 2); }
  onGood(){ this._enqueue(this._t('good'), 1); }
  onPerfect(){ this._enqueue(this._t('perfect'), 2); }
  onBad(){ this._enqueue(this._t('bad'), 2); }
  onCombo(n){ if (n % 5 === 0) this._enqueue(this._t('combo', [n]), 2); }
  onFever(){ this._enqueue(this._t('fever'), 3); }
  onFeverEnd(){ this._enqueue(this._t('feverEnd'), 2); }
  onPower(kind){
    if (kind === 'boost')  this._enqueue(this._t('power_x2'), 3);
    if (kind === 'freeze') this._enqueue(this._t('power_freeze'), 3);
  }
  onQuestRoll(){ this._enqueue(this._t('quest_roll'), 2); }
  onQuestProgress(name, p, need){ this._enqueue(this._t('quest_prog', [name, p, need]), 1); }
  onQuestDone(){ this._enqueue(this._t('quest_done'), 3); }
  onQuestFail(){ this._enqueue(this._t('quest_fail'), 1); }
  onCountdown(n){ this._enqueue(this._t('countdown', [n]), 3); }
  onTimeLow(){ this._enqueue(this._t('t10'), 3); }
  onEnd(score, grade){ this._enqueue(score >= 200 ? this._t('end_good') : this._t('end_ok'), 2); }

  /* ============================= i18n ============================= */
  _t(key, vars = []) {
    const TH = {
      start:"‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏´‡∏°? ‡∏•‡∏∏‡∏¢‡πÄ‡∏•‡∏¢!",
      good:"+‡∏î‡∏µ‡∏°‡∏≤‡∏Å!",
      perfect:"‡πÄ‡∏õ‡πä‡∏∞‡πÄ‡∏ß‡πà‡∏≠‡∏£‡πå!",
      bad:"‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞‡∏ô‡∏∞!",
      combo:(n)=>`‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö x${n}! ‡∏™‡∏π‡πâ‡∏ï‡πà‡∏≠!`,
      fever:"‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏ü‡∏•‡∏∏‡∏Å! ‚ú¶",
      feverEnd:"‡πÑ‡∏ü‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ö‡∏≤‡∏•‡∏á ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö‡πÉ‡∏´‡∏°‡πà!",
      power_x2:"‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô √ó2 ‡πÑ‡∏õ‡πÄ‡∏•‡∏¢!",
      power_freeze:"‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ß‡∏•‡∏≤! ‡∏£‡∏µ‡∏ö‡πÄ‡∏Å‡πá‡∏ö!",
      quest_roll:"‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 3 ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
      quest_prog:(name,p,need)=>`${name}: ${p}/${need}`,
      quest_done:"‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üèÅ",
      quest_fail:"‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡∏£‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏≠‡∏≤‡πÉ‡∏´‡∏°‡πà!",
      t10:"‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 10 ‡∏ß‡∏¥ ‡∏™‡∏∏‡∏î‡πÅ‡∏£‡∏á!",
      end_good:"‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î! ‡πÑ‡∏õ‡∏ï‡πà‡∏≠!",
      end_ok:"‡∏î‡∏µ‡∏°‡∏≤‡∏Å! ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏à‡∏∞‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°",
      countdown:(n)=>`‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô ${n}‚Ä¶`
    };
    const EN = {
      start:"Ready? Go!",
      good:"+Nice!",
      perfect:"PERFECT!",
      bad:"Watch out for junk!",
      combo:(n)=>`Combo x${n}! Keep going!`,
      fever:"FEVER on! ‚ú¶",
      feverEnd:"Fever ending‚Äîbuild again!",
      power_x2:"Score √ó2!",
      power_freeze:"Time freeze! Grab more!",
      quest_roll:"Mini Quests up: clear 3!",
      quest_prog:(name,p,need)=>`${name}: ${p}/${need}`,
      quest_done:"Quest Complete! üèÅ",
      quest_fail:"Quest Failed‚Äînext time!",
      t10:"10s left‚Äîpush!",
      end_good:"Awesome! Again?",
      end_ok:"Nice! One more try?",
      countdown:(n)=>`Start in ${n}‚Ä¶`
    };
    const L = (this.lang === 'EN' ? EN : TH);
    const v = L[key];
    if (typeof v === 'function') return v(...([].concat(vars)));
    return v || key;
  }

  /* ============================= Internals ============================= */
  _enqueue(text, prio = 1) {
    const now = performance?.now?.() || Date.now();

    // ‡∏Å‡∏±‡∏ô duplicate ‡∏™‡∏±‡πâ‡∏ô ‡πÜ
    if (text === this._lastText && (now - this._lastEnqAt) < this.mergeDuplicatesMs) {
      return;
    }
    this._lastText = text;
    this._lastEnqAt = now;

    // ‡∏ñ‡πâ‡∏≤ priority mode ‡πÄ‡∏õ‡∏¥‡∏î: ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡πÅ‡∏ã‡∏á
    this._queue.push({ text, prio: Number(prio) || 1, at: now });

    // ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° prio ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
    if (this.priorityEnabled) {
      this._queue.sort((a,b)=> (b.prio - a.prio) || (a.at - b.at));
    }
    this._tryFlush(); // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÇ‡∏ä‡∏ß‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
  }

  _tryFlush() {
    if (!this.elHUD || !this.elText) return;
    const now = performance?.now?.() || Date.now();

    // ‡πÅ‡∏Å‡πâ‡∏™‡πÅ‡∏õ‡∏°‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ focus
    const minGap = this._blurred ? (this.minGap * this.cooldownScaleOnBlur) : this.minGap;
    if (now - this._lastShownAt < minGap) return;

    const next = this._queue.shift();
    if (!next) return;

    // ‡πÅ‡∏™‡∏î‡∏á
    this._show(next.text);
  }

  _show(text) {
    if (!this.elHUD || !this.elText) return;
    const now = performance?.now?.() || Date.now();

    this._lastShownAt = now;
    this.elHUD.style.display = 'flex';
    this.elHUD.classList.remove('pulse');

    // force reflow to restart CSS animation
    // eslint-disable-next-line no-unused-expressions
    this.elHUD.offsetHeight;

    this.elText.textContent = text;
    this.elHUD.classList.add('pulse');

    clearTimeout(this._timerHide);
    this._timerHide = setTimeout(() => {
      this.elHUD.classList.remove('pulse');
      // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
      this._tryFlush();
    }, this.visibleMs);
  }

  _startLoop() {
    if (this._loop) return;
    const loop = () => {
      // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏¥‡∏ß ‡πÅ‡∏ï‡πà‡∏°‡∏¥‡πÑ‡∏î‡πâ‡πÇ‡∏ä‡∏ß‡πå‡πÄ‡∏û‡∏£‡∏≤‡∏∞ minGap ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
      this._tryFlush();
      this._loop = requestAnimationFrame(loop);
    };
    this._loop = requestAnimationFrame(loop);
  }

  _ensureHUD(returnTextElOnly = false) {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á HUD ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á DOM ‡πÄ‡∏ö‡∏≤ ‡πÜ
    let hud = document.getElementById('coachHUD');
    let txt = document.getElementById('coachText');
    if (!hud) {
      hud = document.createElement('div');
      hud.id = 'coachHUD';
      hud.style.cssText = [
        'position:fixed','left:50%','bottom:64px','transform:translateX(-50%)',
        'display:flex','align-items:center','justify-content:center',
        'padding:10px 14px','background:rgba(0,0,0,.55)','backdrop-filter:blur(4px)',
        'color:#fff','font:600 16px/1.2 system-ui,Segoe UI,Arial',
        'border-radius:12px','box-shadow:0 6px 18px rgba(0,0,0,.25)',
        'z-index:20','pointer-events:none','opacity:1'
      ].join(';');
      const span = document.createElement('span');
      span.id = 'coachText';
      hud.appendChild(span);
      document.body.appendChild(hud);

      // inject keyframes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå pulse (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
      if (!document.getElementById('coachPulseStyle')) {
        const st = document.createElement('style');
        st.id = 'coachPulseStyle';
        st.textContent = `
          #coachHUD.pulse { animation: coachPulse 1.6s ease; }
          @keyframes coachPulse {
            0% { transform: translate(-50%, 8px) scale(.98); opacity:.0; }
            12%{ transform: translate(-50%, 0) scale(1);   opacity:1; }
            84%{ opacity:1; }
            100%{ opacity:.0; }
          }
        `;
        document.head.appendChild(st);
      }
    }
    if (returnTextElOnly) {
      return txt || document.getElementById('coachText');
    }
    return hud;
  }
}
