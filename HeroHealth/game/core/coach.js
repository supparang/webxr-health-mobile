// core/coach.js ‚Äî ‡πÇ‡∏Ñ‡πâ‡∏ä‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏ï‡πâ FEVER
export class Coach {
  constructor(opts = {}) {
    this.lang = opts.lang || 'TH';
    this._elWrap = document.getElementById('coachHUD');
    this._elText = document.getElementById('coachText');
    this._hideTimer = 0;
    this._queue = [];
    this._busy = false;
    if (this._elWrap) this._elWrap.style.display = 'block';
  }

  setLang(l) { this.lang = l || 'TH'; }

  _show(text, ms = 1600) {
    if (!this._elWrap || !this._elText) return;
    this._elWrap.style.display = 'block';
    this._elText.textContent = text;

    // ‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡∏ô‡πâ‡∏≠‡∏¢ ‡πÜ: pulse
    this._elWrap.style.transition = 'transform .18s ease, opacity .18s ease';
    this._elWrap.style.transform = 'translateY(4px)';
    this._elWrap.style.opacity = '0.8';
    requestAnimationFrame(() => {
      this._elWrap.style.transform = 'translateY(0)';
      this._elWrap.style.opacity = '1';
    });

    clearTimeout(this._hideTimer);
    this._hideTimer = setTimeout(() => {
      this._elWrap.style.opacity = '0.0';
      this._elWrap.style.transform = 'translateY(4px)';
      setTimeout(() => {
        if (this._elWrap) { this._elWrap.style.opacity = '1'; this._elWrap.style.transform = 'translateY(0)'; }
        this._busy = false;
        this._drain();
      }, 180);
    }, ms);
  }

  _drain() {
    if (this._busy) return;
    const next = this._queue.shift();
    if (!next) return;
    this._busy = true;
    this._show(next.text, next.ms);
  }

  say(text, ms = 1600) {
    this._queue.push({ text, ms });
    this._drain();
  }

  onStart(modeKey) {
    const msgTH = {
      goodjunk: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏∏‡∏¢ ‡∏î‡∏µ vs ‡∏Ç‡∏¢‡∏∞! ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏î‡∏µ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏î‡∏±‡∏Å ‚úä',
      groups:   '‡∏à‡∏≤‡∏ô 5 ‡∏´‡∏°‡∏π‡πà! ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏∞!',
      hydration:'‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ô‡πâ‡∏≥‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ!',
      plate:    '‡∏à‡∏±‡∏î‡∏à‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤!'
    }[modeKey] || '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢!';
    const msgEN = {
      goodjunk: 'Let‚Äôs go! Pick healthy, dodge junk ‚úä',
      groups:   'Food Groups! Hit the right category!',
      hydration:'Keep hydration balanced!',
      plate:    'Build a healthy plate!'
    }[modeKey] || 'Go for it!';
    this.say(this.lang === 'TH' ? msgTH : msgEN, 1800);
  }

  onEnd(score, meta = {}) {
    const grade = meta.grade || 'A';
    const msgTH = `‡∏à‡∏ö‡πÄ‡∏Å‡∏°! ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ${score|0} ‡πÄ‡∏Å‡∏£‡∏î ${grade} ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å üëè`;
    const msgEN = `Finished! Score ${score|0}, Grade ${grade}. Nice job üëè`;
    this.say(this.lang === 'TH' ? msgTH : msgEN, 1800);
  }

  // ‡∏ö‡∏≤‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©
  onFever() {
    this.say(this.lang==='TH' ? 'FEVER ‡∏ï‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß! ‡πÑ‡∏´‡∏•‡∏•‡∏∑‡πà‡∏ô‡πÄ‡∏•‡∏¢!' : 'FEVER on! Keep it up!', 1400);
  }
  onCombo(n) {
    if (n===5) this.say(this.lang==='TH' ? '‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö 5! ‡πÄ‡∏ó‡πà!' : 'Combo 5! Nice!', 1200);
    if (n===10) this.say(this.lang==='TH' ? '‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö 10! ‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î!' : 'Combo 10! Awesome!', 1200);
    if (n===20) this.say(this.lang==='TH' ? '‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö 20!! ‡πÑ‡∏ü‡∏•‡∏∏‡∏Å!' : 'Combo 20!! On fire!', 1200);
  }
}
