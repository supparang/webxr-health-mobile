export class Coach {
  constructor(opts = {}) {
    this.lang = opts.lang || 'TH';            // 'TH' | 'EN' | 'L3'
    this.minGap = opts.minGap ?? 1200;
    this.autoHideMs = opts.autoHideMs ?? 2000;
    this._last = 0;
    this._hideT = null;
  }
  setLang(lang){ this.lang = lang; }
  setGap(ms){ this.minGap = Math.max(200, ms|0); }

  _emit(html){
    const box = document.getElementById('coachHUD');
    const text = document.getElementById('coachText');
    if(!box || !text) return;
    text.innerHTML = html;
    box.style.display = 'block';
    box.classList.remove('show'); void box.offsetWidth; box.classList.add('show');
    clearTimeout(this._hideT);
    this._hideT = setTimeout(()=>{ box.style.display='none'; }, this.autoHideMs);
  }
  _sayRaw(t){
    const now = performance.now?.() ?? Date.now();
    if(now - this._last < this.minGap) return;
    this._last = now;
    this._emit(t);
  }
  say(th, en){
    if(this.lang === 'TH') this._sayRaw(th);
    else if(this.lang === 'EN') this._sayRaw(en);
    else this._sayRaw(`${th} <span style="opacity:.8">| ${en}</span>`);
  }

  onStart(mode){
    const m = {
      goodjunk:  ['‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏î‡∏µ ‡∏´‡∏•‡∏µ‡∏Å‡∏Ç‡∏¢‡∏∞!','Focus good, dodge junk!'],
      groups:    ['‡∏°‡∏≠‡∏á üéØ ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏´‡∏°‡∏ß‡∏î','Match the target group!'],
      hydration: ['‡∏Ñ‡∏∏‡∏° 45‚Äì65%','Keep 45‚Äì65%'],
      plate:     ['‡πÄ‡∏ï‡∏¥‡∏°‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö','Fill the quotas']
    };
    const t = m[mode] || ['‡∏•‡∏∏‡∏¢!','Let‚Äôs go!'];
    this.say(t[0], t[1]);
  }

  onGood(){
    const list = [
      ['‡∏î‡∏µ‡∏°‡∏≤‡∏Å!','Nice!'], ['‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î!','Awesome!'],
      ['‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡πÄ‡∏•‡∏¢!','Great job!'], ['‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞!','Keep it up!']
    ];
    const p = list[Math.floor(Math.random()*list.length)];
    this.say(p[0], p[1]);
  }

  onBad(mode){
    const list = [
      ['‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà!','No worries, try again!'],
      ['‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢!','Be careful!'],
      ['‡∏û‡∏•‡∏≤‡∏î‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß!','Almost there!'],
      ['‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞!','Focus again!']
    ];
    const p = list[Math.floor(Math.random()*list.length)];
    this.say(p[0], p[1]);
  }

  onCombo(x){ if(x>0 && x%5===0) this.say(`‡∏Ñ‡∏≠‡∏°‡πÇ‡∏ö x${x}!`,`Combo x${x}!`); }
  onFever(){ this.say('FEVER! ‡∏•‡∏∏‡∏¢!','FEVER MODE!'); }
  onPower(k){
    const m = { boost:['‡∏ö‡∏π‡∏™‡∏ï‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô!','Score boost!'], slow:['‡πÄ‡∏ß‡∏•‡∏≤‡∏ä‡πâ‡∏≤‡∏•‡∏á','Time slowed'], shield:['‡∏°‡∏µ‡πÄ‡∏Å‡∏£‡∏≤‡∏∞!','Shielded!'] };
    const t = m[k] || ['‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°!','Power up!']; this.say(t[0], t[1]);
  }
  onHydrationZoneChange(z){
    const m = { low:['‡∏ô‡πâ‡∏≥‡∏ô‡πâ‡∏≠‡∏¢ ‡πÄ‡∏ï‡∏¥‡∏° üíß','Low‚Äîgrab üíß'], ok:['‡∏Ñ‡∏∏‡∏°‡πÑ‡∏î‡πâ‡∏î‡∏µ','Great‚Äîsteady'], high:['‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å ‡πÄ‡∏ö‡∏£‡∏Å‡∏Å‡πà‡∏≠‡∏ô','Too high‚Äîease up'] };
    const t = m[z] || ['‡∏î‡∏π‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥','Watch hydration']; this.say(t[0], t[1]);
  }
  onEnd(score, grade, extra){
    const acc = (extra?.accuracyPct!=null) ? ` | Accuracy ${extra.accuracyPct}%` : '';
    this.say(`‡∏™‡∏£‡∏∏‡∏õ: ${score} | ‡πÄ‡∏Å‡∏£‡∏î ${grade}${acc}`, `Summary: ${score} | Grade ${grade}${acc}`);
  }
}
