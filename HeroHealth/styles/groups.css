// ... (ไฟล์เดิมตามที่คุณใช้) ...

function spawnOne(rect, Bus){
  const meta = pickMeta({ life: 1600 }, state);

  // เมื่อ CSS ใช้ transform:translate(-50%,-50%) ให้สุ่มพิกัดแบบ “กึ่งกลาง”
  const pad = 40; // กันหลุดขอบ
  const x = Math.round(pad + Math.random()*(rect.width  - pad*2));
  const y = Math.round(pad + Math.random()*(rect.height - pad*2));

  const b = document.createElement('button');
  b.className = 'spawn-emoji';
  b.type = 'button';
  b.style.left = x + 'px';
  b.style.top  = y + 'px';
  b.textContent = meta.char;
  b.setAttribute('aria-label', meta.aria);
  if (meta.golden) b.setAttribute('data-golden','1');

  // FX hook on spawn
  try { fx.onSpawn?.(b, state); } catch {}

  b.addEventListener('click', (ev)=>{
    if (!state.running) return;
    ev.stopPropagation();
    const ui = { x: ev.clientX, y: ev.clientY };
    const res = onHit(meta, { sfx: Bus?.sfx }, state, hud);

    if (res === 'good' || res === 'perfect'){
      const pts = res === 'perfect' ? 20 : 10;
      if (res === 'perfect'){ coach?.onPerfect?.(); } else { coach?.onGood?.(); }
      engine?.fx?.popText?.(`+${pts}${res==='perfect'?' ✨':''}`, { x: ui.x, y: ui.y, ms: 720 });
      try { fx.onHit?.(ui.x, ui.y, meta, state); } catch {}
      state.stats[res]++; Bus?.hit?.({ kind: res, points: pts, ui });
    } else if (res === 'bad'){
      document.body.classList.add('flash-danger'); setTimeout(()=>document.body.classList.remove('flash-danger'), 160);
      coach?.onBad?.(); state.stats.bad++; Bus?.miss?.();
      state.freezeUntil = Math.max(state.freezeUntil, performance.now()+260);
    }

    try { b.remove(); } catch {}
    const idx = state.items.findIndex(it=>it.el===b); if (idx>=0) state.items.splice(idx,1);
  }, { passive:false });

  document.getElementById('spawnHost')?.appendChild?.(b);
  state.items.push({ el:b, x, y, born: performance.now(), life: meta.life, meta });
}
