export const name='‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ô‡πâ‡∏≥';

// ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
const WATER=["üíß","üö∞"], SWEET=["ü•§","üßÉ","üßã"];

// ‡∏Ñ‡πà‡∏≤‡πÇ‡∏ã‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå)
export const OPT_MIN = 45;
export const OPT_MAX = 65;

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏°‡∏î
export function init(state, hud){
  state.hyd = 50;          // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏≤‡∏á ‡πÜ
  state.hydMin = OPT_MIN;  // ‡∏û‡∏≠‡∏î‡∏µ‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
  state.hydMax = OPT_MAX;  // ‡∏û‡∏≠‡∏î‡∏µ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
  window.HYD_OPT_MIN = state.hydMin; // ‡πÉ‡∏´‡πâ HUD ‡∏≠‡πà‡∏≤‡∏ô
  window.HYD_OPT_MAX = state.hydMax;
}

// ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
export function pickMeta(diff){
  const rate= diff==='Easy'?0.78: diff==='Hard'?0.55:0.66;
  const water = Math.random()<rate;
  const arr = water ? WATER : SWEET;
  return {type:'hydra', water, char:arr[0]};
}

// ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ã‡∏ô
function zoneOf(v, min, max){
  if(v < min) return 'low';
  if(v > max) return 'high';
  return 'ok';
}

// ‡πÑ‡∏î‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
export function onHit(meta, systems, state, hud){
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏î‡∏∏‡∏•
  if(meta.water){ state.hyd = Math.min(100, state.hyd + 6); }
  else          { state.hyd = Math.max(0,   state.hyd - 8); }

  // ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏ã‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
  const z = zoneOf(state.hyd, state.hydMin, state.hydMax);
  if(meta.water){
    if(z==='ok'){ systems.score.add(6); systems.fever.onGood(); systems.score.good(); systems.fx.ding(); }
    else if(z==='low'){ systems.score.add(5); systems.score.good(); systems.fx.ding(); }
    else { // high
      systems.score.add(2); systems.score.bad(); systems.fx.thud();
    }
  }else{ // ‡∏´‡∏ß‡∏≤‡∏ô
    if(z==='ok'){ systems.score.add(-3); systems.score.bad(); systems.fever.onBad(); systems.fx.thud(); }
    else if(z==='low'){ systems.score.add(-1); systems.score.bad(); systems.fx.thud(); }   // ‡∏¢‡∏±‡∏á‡∏Ç‡∏≤‡∏î‡∏ô‡πâ‡∏≥‡∏≠‡∏¢‡∏π‡πà ‡πÇ‡∏ó‡∏©‡πÄ‡∏ö‡∏≤‡∏•‡∏á
    else { systems.score.add(-4); systems.score.bad(); systems.fx.thud(); }                // ‡πÄ‡∏Å‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏¥‡πà‡∏á‡πÅ‡∏¢‡πà
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï HUD
  const zone = zoneOf(state.hyd, state.hydMin, state.hydMax);
  hud.setHydration(state.hyd, zone);
}
